{"name":"EasyCryptography.Net","tagline":"This library provides easy access to System.Security.Cryptography","body":"#EasyCryptography.Net\r\n\r\nThis library provides easy access to ```System.Security.Cryptography```\r\nIt designed for easiness, not for diversity or powerful functions\r\n\r\n*.Net Framework 3.5 or above REQUIRED*\r\n\r\n##How to use\r\n\r\n```C#\r\n//using statement\r\nusing Variel.Security;\r\n\r\n//How to hash data (SHA1/256/512, MD5 Supported)\r\nstring sha256Hash = Hash.SHA256Hash(\"This string will be hashed\");\r\n\r\n//How to encrypt and decrypt data symmetrically (AES(Rijndael) Supported)\r\nbyte[] salt = Guid.NewGuid().ToByteArray(); //Create a salt;\r\nbyte[] data = Encoding.UTF8.GetBytes(\"This is Normal String\");\r\nbyte[] encryptedData = Cryptography.EncryptAES(\"This is the KEY\", salt, data);\r\nbyte[] decryptedData = Cryptography.DecryptAES(\"This is the KEY\", salt, encryptedData);\r\n\r\n//How to encrypt and decrypt data asymmetrically (RSA Supported)\r\nRSAParameters key = Cryptography.CreateRSAParameter();\r\nbyte[] data = Encoding.UTF8.GetBytes(\"This is Normal String\");\r\nbyte[] encryptedData = Cryptography.EncryptRSA(data, key);\r\nbyte[] decryptedData = Cryptography.DecryptRSA(encryptedData, key);\r\n```\r\n\r\n##Licence\r\n\r\nYou **CAN DO ANYTHING** but some conditions below **MUST** be keeped:\r\n\r\n1. **DO NOT CHANGE** Namespace.\r\n2. **WRITE** \"VARIEL\" or [this GitHub page url](http://variel.kr/easycrypto) on credit of your product.\r\n3. Feel free to be a contributor.\r\n\r\n##Contact\r\n\r\ne-mail : [variel@variel.kr](mailto:variel@variel.kr)\r\n\r\nHomepage : [http://variel.kr](http://variel.kr)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}